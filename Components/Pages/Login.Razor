@page "/login"
@using BlazorApp.Models 
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JSRuntime
<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900&display=swap" rel="stylesheet">

 <Style>
 .login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    font-family: Arial, sans-serif;
    background-color: #f0f2f5;
}

.login-left {
    background-color: #001f53;
    color: white;
    padding: 30px;
    border-radius: 10px 0 0 10px;
    text-align: center;
    width: 500px;
    height: 525px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.4); 
   
}

.welcome-image {
    width: 400px;
    padding:40px;
    margin-top: 20px;
}

.login-right {
    background-color: white;
    padding: 15px;
    border-radius: 0 10px 10px 0;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 500px;
    border-left: 2px solid #e0e0e0; 
}

.login-right h1{
    margin-bottom: 20px;
    text-align: center;
    font-size: 30px
    color: #001F54;
    font-family: "Roboto", sans-serif;
    font-weight: 400;
    font-style: normal;


    
}
 h3 {
    margin-bottom: 20px;
    text-align: center;

}

.input-group {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    background-color: #f7f7f7;
}

.input-group i {
    margin-right: 10px;
    color: #888;
}

.input-field {
    width: 100%;
    border: none;
    outline: none;
    background: none;
    font-size: 14px;
}
.robot{
    display: flex;
    align-items: center;
    justify-content: center;

}
.recaptcha-group {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    justify-content: center;
    background-color: #EEEEEE;
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 10px;
    width: 50%;
    cursor: pointer;
}
.recaptcha-group img{
    width: 30px;
    height:30px;
    margin-left:20px;
}

.recaptcha-group input {
    margin-right: 10px;
}

.forgot-password {
    display: block;
    margin-bottom: 20px;
    color: #007bff;
    text-decoration: none;
    text-align: right;
}

.login-button {
    background-color: #007bff;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 5px;
    width: 80%;
    cursor: pointer;
    margin-bottom: 20px;
    font-size: 16px;
}
.login-button :hover{
    color:#298CF7;

    }
.button{
 display: flex;
 align-items:center;
 justify-content:center;
}

.google-signin {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 20px;
    width: 40%;
    cursor: pointer;
    margin-bottom: 20px;
}

.google-signin img {
    width: 30px;
    height:30px;
    
}
.google{
    display: flex;
    align-items: center;
    justify-content: center;
}

p {
    margin: 0px;
    text-align: center;
    font-size: 15px;
}

a {
    text-decoration: none;
    color: #007bff;
}

.google-signin p {
    font-size:5px;
}

</style>


<div class="login-container">
    <div class="login-left">
        <h2>Welcome To Atit Hood</h2>
        <img src="/image/giphy-unscreen.gif" alt="Welcome Image" class="welcome-image" />
    </div>

    <div class="login-right">
        <h1>Login</h1>

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
            <DataAnnotationsValidator />

            <div class="input-group">
                <i class="fas fa-user"></i>
                <InputText @bind-Value="loginModel.UserID" placeholder="User ID" class="input-field" />
            </div>

            <div class="input-group">
                <i class="fas fa-lock"></i>
                <InputText @bind-Value="loginModel.Password" placeholder="Password" type="password" class="input-field" />
            </div>

            <a href="#" class="forgot-password">Forget Password?</a>

            <div class="robot">
                <div class="recaptcha-group">
                    <input type="checkbox" id="recaptcha" />
                    <label for="recaptcha">Iâ€™m not a robot</label>
                    <img src="/image/Group_4-removebg-preview.png" alt="Recaptcha-Group" />
                </div>
            </div>

            <div class="button">
                <button type="button" @onclick="HandleLogin" class="login-button">Login</button>
            </div>
        </EditForm>

        <p>Or</p>
        <div class="google">
            <button class="google-signin">
                <img src="/image/google-removebg-preview.png" alt="Google SignIn" />
                SignIn with Google
            </button>
        </div>
        <p>New to Atit Hood? <a href="#">Create Account.</a></p>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;

    private async Task HandleLogin()
    {
        Console.WriteLine("Login attempted"); // Debugging statement

        if (loginModel.UserID == "atit" && loginModel.Password == "password")
        {
            loginFailed = false;
            Console.WriteLine("Login successful, navigating to home..."); // Debugging statement
            Navigation.NavigateTo("/");
        }
        else
        {
            loginFailed = true;
            Console.WriteLine("Login failed"); // Debugging statement

            await ShowPopup("Invalid username or password. Please try again.");
        }

        Console.WriteLine($"Attempting to log in with {loginModel.UserID} and {loginModel.Password}");
    }

    private async Task ShowPopup(string message)
    {
        await JSRuntime.InvokeVoidAsync("alert", message);
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string UserID { get; set; } = string.Empty; // Initialize with default value

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = string.Empty; // Initialize with default value
    }
}